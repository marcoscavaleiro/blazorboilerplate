@page "/account/register"

@layout LoginLayout
@inject IUriHelper uriHelper
@inject IdentityAuthenticationStateProvider authStateProvider
@inject IMatToaster matToaster

<MatCard>
    <div class="logo">
        <img src="images/blazorboilerplate.svg" style="width:100px;" /><br />Blazor Boilerplate
        <br />
        <h4>Create Account</h4>
    </div>

    <EditForm Model="@registerParameters" OnValidSubmit="@RegisterUser">
        <DataAnnotationsValidator />
        <ValidationSummary />
        <fieldset>
            <div class="form-group">
                <MatTextField @bind-value="@registerParameters.UserName" Label="Username" Icon="person" IconTrailing="true" FullWidth="true" Required="true"></MatTextField>
            </div>
            <div class="form-group">
                <MatTextField @bind-value="@registerParameters.Email" Label="Email" Icon="mail_outline" IconTrailing="true" FullWidth="true" Required="true"></MatTextField>
            </div>
            <div class="form-group">
                <MatTextField @bind-value="@registerParameters.Password" Label="Password" Icon="lock_outline" IconTrailing="true" FullWidth="true" Required="true" Type="password"></MatTextField>
            </div>
            <div class="form-group">
                <MatTextField @bind-value="@registerParameters.PasswordConfirm" Label="Password Confirmation" Icon="lock_outline" IconTrailing="true" FullWidth="true" Required="true" Type="password"></MatTextField>
            </div>
            <div class="form-group d-flex justify-content-end">
                <MatButton Type="submit" Raised="true">Create account</MatButton>
            </div>
            <hr />
            <NavLink href="login">
                <h6 class="font-weight-normal text-center">Already have an account? Click here to login</h6>
            </NavLink>
        </fieldset>
    </EditForm>
</MatCard>

@functions {

    RegisterParameters registerParameters { get; set; } = new RegisterParameters();

    async Task RegisterUser()
    {
        try
        {
            await authStateProvider.Register(registerParameters);
            matToaster.Add("New User Email Verification was sent to: " + registerParameters.Email, MatToastType.Success, "User Creation Sucessful");
            uriHelper.NavigateTo("");
        }
        catch (Exception ex)
        {
            matToaster.Add(ex.Message, MatToastType.Danger, "User Creation Failed");
        }
    }
}
